@typeparam TItem

<table class="table is-fullwidth">
    <thead>
        <tr>
            @if(Columns == null || Columns.Count <=0)
            {
                //create header with reflection
            }
            else
            {
                //Create header based on column definitions.
                foreach(var column in Columns)
                {
                                    
                    if(column.Alignment != Alignment.NotSet)
                    {
                        <td align="@column.Alignment.ToString().ToLower()">@column.Caption</td>                   
                    }
                    else
                    {
                         <th> @column.Caption </th>             
                    }                                
                }

            }

        </tr>
    </thead>
    <tbody>
        @foreach(TItem item in DataItems)
        {
            <tr>
                @foreach (var col in Columns)
                {
                    if(col.Alignment != Alignment.NotSet)
                    {
                        <td align="@col.Alignment.ToString().ToLower()">@typeof(TItem).GetProperty(col.DataField).GetValue(item)</td>
                    }
                    else
                    {
                        <td> @typeof(TItem).GetProperty(col.DataField).GetValue(item)  </td>                    
                    }
                    
                }
            </tr>
        }


    </tbody>

</table>




@code {

    [Parameter]
    public List<TItem> DataItems{ get; set; }


    [Parameter]
    public List<ColumnDefinition> Columns{ get; set; }

}




