@page "/parent"

<h3>ParentComponent</h3>

<br/>
<br/>

<h5>show counter: </h5>
<p>
    Parent Current Count: @currentCount
</p>

<p>
    delegate Count: @delegateCount
</p>

<button class="button" @onclick= "updateChildComponent"> Show Child Component </button>

<ChildComponent 
   @ref="childRef"
   SetCurrentCount="SetCurrentCountFunction"
   SetCount="FunctionToChildDelegate" 
></ChildComponent>




<br/>
<br/>
<h5>show Dialog: </h5>
<button class="button" @onclick="updateDialogComponent"> show dialog </button>

<DialogComponent 
@ref="dialogRef">  

</DialogComponent>



<br/>
<br/>

<h5>show Render Fragment component: </h5>
<FieldComponent Label="Name">
    <Control>
        <input class="input" type="email" placeholder="Name">
    </Control>
</FieldComponent>

<FieldComponent Label="Title">
    <Control>
        <input class="input" type="email" placeholder="Title">
    </Control>
</FieldComponent>

<FieldComponent Label="Department">
    <Control>
        <input class="input" type="email" placeholder="Department">
    </Control>
</FieldComponent>



<br/>
<br/>

<h5>show Generic Typed Item List component: </h5>

<GridAutoComponent 
Items="employees" 
CssClass="is-striped is-hoverable"
ColumnsToExcludeCSV="Id"
>

</GridAutoComponent>




@code {
    private int currentCount;

    private int delegateCount;

    private void SetCurrentCountFunction(int value)
    {
        currentCount = value;
    }


    private void FunctionToChildDelegate(int value)
    {
        delegateCount = value + 10;
        //StateHasChanged();
    }


    private ChildComponent childRef;

    private void updateChildComponent()
    {
        childRef.DiaplayStatusChange();
    }



    private DialogComponent dialogRef;

    public void updateDialogComponent()
    {
        dialogRef.DiaplayStatusChange();

    }


    #region show Generic Typed Item List component


    private List<Employee> employees;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        employees = new List<Employee>();

        employees.AddRange(new Employee[3]
        {
            new Employee { Id = 1, Name = "John_Doe", Title = "Developer", Department = "Dev" },
            new Employee { Id = 2, Name = "Jeff_Doe", Title = "Developer", Department = "Dev" },
            new Employee { Id = 3, Name = "Tom_Doe", Title = "Devops", Department = "Dev" }
        });
        

    }




    #endregion
}
