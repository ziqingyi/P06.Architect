@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<RepeaterComponent 
@ref="repeater"
Items="customers">
    <header>
        <h2>Customers List3</h2>
    </header>
    <Row Context="customer" >
        <div>
            <b>@customer.CompanyName</b>
            &nbsp;
            <button class="btn btn-light" @onclick="@(()=>{EditCustomer(customer);})"> Edit </button>
        </div>
        <div class="ml-5">@customer.ContactName</div>
        <div class="ml-5">@customer.PhoneNumber</div>
        <br/>
    </Row>

    <EditTemplate Context="currentCustomer" >
        <div>
            <text>Company Name: </text>
            <input class="form-control" @bind-value="currentCustomer.CompanyName"/>
        </div>
        
        <div>
            <text>Contact Name: </text>
            <input class="form-control" @bind-value="currentCustomer.ContactName"/>
        </div>
        
        <div>
            <text>Phone Number: </text>
            <input class="form-control" @bind-value="currentCustomer.PhoneNumber"/>
        </div>

    </EditTemplate>


    <footer>
        <h3>----------------------------------------------------</h3>
    </footer>

</RepeaterComponent>


@code{
    private List<Customer> customers;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        customers = new List<Customer>();

        customers.AddRange(
        new Customer[]
        {
            new Customer{ContactName="User1", PhoneNumber="111 111", CompanyName="Company1"},
            new Customer{ContactName="User2", PhoneNumber="222 222", CompanyName="Company2"},
            new Customer{ContactName="User3", PhoneNumber="333 333", CompanyName="Company3"},
        } );
    }





    private RepeaterComponent<Customer> repeater;


    private void EditCustomer(Customer customer)
    {
        repeater.ItemToEdit = customer;
    }





}
